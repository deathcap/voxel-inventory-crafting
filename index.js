// Generated by CoffeeScript 1.6.3
(function() {
  var InventoryDialog, InventoryWindow;

  InventoryWindow = require('inventory-window');

  module.exports = function(game, opts) {
    return new InventoryDialog(game, opts);
  };

  InventoryDialog = (function() {
    function InventoryDialog(game, opts) {
      var container, _ref, _ref1,
        _this = this;
      this.game = game;
      this.playerInventory = (function() {
        if ((_ref = opts.playerInventory) != null) {
          return _ref;
        } else {
          throw 'voxel-inventory-dialog requires "playerInventory" set to inventory instance';
        }
      })();
      this.registry = (function() {
        if ((_ref1 = opts.registry) != null) {
          return _ref1;
        } else {
          throw 'voxel-inventory-dialog requires "registry" set to voxel-registry instance';
        }
      })();
      this.playerIW = new InventoryWindow({
        width: 10,
        inventory: this.playerInventory,
        getTexture: function(itemPile) {
          return _this.game.materials.texturePath + _this.registry.getItemProps(itemPile.item).itemTexture + '.png';
        }
      });
      container = this.playerIW.createContainer();
      container.style.visibility = 'hidden';
      container.style.position = 'absolute';
      container.style.top = '20%';
      container.style.left = '30%';
      container.style.zIndex = 1;
      document.body.appendChild(container);
    }

    InventoryDialog.prototype.enable = function() {};

    InventoryDialog.prototype.disable = function() {};

    InventoryDialog.prototype.show = function() {
      return this.playerIW.container.style.visibility = '';
    };

    InventoryDialog.prototype.hide = function() {
      return this.playerIW.container.style.visibility = 'hidden';
    };

    InventoryDialog.prototype.isVisible = function() {
      return this.playerIW.container.style.visibility === '';
    };

    InventoryDialog.prototype.toggle = function() {
      if (this.isVisible()) {
        return this.hide();
      } else {
        return this.show();
      }
    };

    return InventoryDialog;

  })();

}).call(this);
